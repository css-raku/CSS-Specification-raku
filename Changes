{{$NEXT}}

0.4.16  2025-10-31T06:07:47+13:00
  - A major rebuild of this module to compile specifications
    via RakuAST. This release retires CSS::Specification::BUILD
    and introduces CSS::Specification::Compiler.

0.4.15  2025-01-21T12:16:33+13:00
  - Revert v0.4.14 changes to usage token; unbreaks
    CSS::Module

0.4.14  2025-01-21T10:15:22+13:00
  - Backported CSS::Specification::AST methods to
    CSS::Grammar::AST (v0.3.13)

0.4.13  2023-01-01T10:28:12+13:00
  - Fix for Color::Names api(v2)

0.4.12  2022-06-16T11:43:36+12:00
  - Remore internal perl6 references; replace with Raku.
  - Upload to zef ecosystem

0.4.11  2021-08-20T11:21:04+12:00
  - Use CSS::Grammer 0.3.9 build() method for AST construction

0.4.10  2021-04-24T07:36:51+12:00
  - Rename grammar CSS::Specification::Terms -> CSS::Specificaton::Defs

0.4.9  2021-04-06T07:10:48+12:00
  - Don't special-case unknown properties in `:lax` mode - let the
    caller handle this.

0.4.8  2021-03-17T08:32:39+13:00
  - Renamed github project and repository
  - Moved from Raku Ecosystem to CPAN

0.4.7 Fix for CSS::Grammar 0.3.4
0.4.6 Rename sources *.pm -> *.rakumod; *.rakumod; *.pl -> *.raku
0.4.5 Use color chart from Color::Names::CSS3 (Color::Names module)
0.4.4 Fixed whitespace handling on quantifiers
0.4.3 Move test classes into lib path; t::CSS::Aural::Grammar, etc.
0.4.2 Bugfix a length can be a percentage quantity
- Also reinstate t/terms.t, lost around 538f043
0.4.1 Output a specific unit for zero quantities.
- For example the ast for length '0' is now :px(0) rather than :length(0).
0.4.0 Added rule declarations.
- It's now possible to define rules for sharing between properties. For example
      <voice-family> := male | female | child

- Choices now have left-precedence
  for example: 'font-family'	[ <generic-family> | <family-name> ]#
  will resolve as a generic-family in preference to a family name

0.3.2 Starting adding property checks:
- If a property has edges, there should be exactly four
- All children of an edge property, should also be edges
0.3.1 Preserve declaration order of child properties in metadata
0.3.0 Distinguish 'edge' and 'child' properties
- A four sided propert has 'edges'. E.g. 'border' has
  'border-top', ... 'border-left'
- A compound property has children. E.g. 'background' has 'background-color',
  'background-attachment', 'background-image', ...
0.2.2 Include subproperties in meta childern.
- E.g. "cue" now has child properties "cue-before", "cue-after"
- These are distinguished from "box" properties by not having the :box flag set.
